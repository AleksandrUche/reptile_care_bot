"""init

Revision ID: b96ae37e6fb5
Revises: 
Create Date: 2025-02-19 21:00:39.920340

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'b96ae37e6fb5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
                    sa.Column('username', sa.String(), nullable=True),
                    sa.Column('first_name', sa.String(), nullable=True),
                    sa.Column('last_name', sa.String(), nullable=True),
                    sa.Column('Роль пользователя',
                              sa.Enum('OWNER', 'ADMIN', 'USER', name='userrole'),
                              nullable=False),
                    sa.Column('Активный?', sa.Boolean(), nullable=False),
                    sa.Column('Заблокирован?', sa.Boolean(), nullable=False),
                    sa.Column('Дата регистрации', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('company',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('Название компании', sa.String(), nullable=False),
                    sa.Column('Описание', sa.String(), nullable=True),
                    sa.Column('Дата обновления', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_company_user_id'), 'company', ['user_id'], unique=False)
    op.create_table('user_subscriptions',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('Дата начала', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('Дата окончания', sa.DateTime(timezone=True),
                              nullable=False),
                    sa.Column('Активная?', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('group',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('Название группы', sa.String(), nullable=False),
                    sa.Column('Описание', sa.String(), nullable=True),
                    sa.Column('Дата обновления', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('company_id')
                    )
    op.create_table('subscription',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('Тип подписки',
                              sa.Enum('ONE_MONTH', 'TWO_MONTHS', 'SIX_MONTHS', 'YEAR',
                                      name='subscriptiontype'), nullable=False),
                    sa.Column('Цена', sa.Integer(), nullable=False),
                    sa.Column('Продолжительность', sa.Integer(), nullable=False),
                    sa.Column('Активная?', sa.Boolean(), nullable=False),
                    sa.Column('user_subscription_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_subscription_id'],
                                            ['user_subscriptions.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_company_association',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.Column('Роль', sa.Enum('OWNER', 'ADMIN', 'EDITOR', 'VIEWER',
                                              name='userrolecompany'), nullable=False),
                    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id', 'company_id', name='uq_user_company')
                    )
    op.create_table('pet',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('Имя', sa.String(), nullable=False),
                    sa.Column('Дата рождения', sa.DateTime(timezone=True),
                              nullable=False),
                    sa.Column('Дата приобретения', sa.DateTime(timezone=True),
                              nullable=False),
                    sa.Column('Пол',
                              sa.Enum('BOY', 'GIRL', 'NOT_DEFINED', name='genderrole'),
                              nullable=False),
                    sa.Column('Морфа', sa.String(), nullable=True),
                    sa.Column('Вид', sa.String(), nullable=True),
                    sa.Column('Фото', sa.String(), nullable=True),
                    sa.Column('Дата обновления', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('group_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_group_association',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('group_id', sa.Integer(), nullable=False),
                    sa.Column('Роль', sa.Enum('OWNER', 'ADMIN', 'EDITOR', 'VIEWER',
                                              name='userrolecompany'), nullable=False),
                    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id', 'group_id', name='uq_user_group')
                    )
    op.create_table('length_pet',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('Длина', sa.Float(), nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('pet_id', sa.Integer(), nullable=False),
                    sa.Column('Дата измерения', sa.DateTime(timezone=True),
                              nullable=False),
                    sa.Column('Дата обновления', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('molting_pet',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('pet_id', sa.Integer(), nullable=False),
                    sa.Column('Дата линьки', sa.DateTime(timezone=True),
                              nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('Дата обновления', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('weight_pet',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('Вес', sa.Float(), nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('pet_id', sa.Integer(), nullable=False),
                    sa.Column('Дата взвешивания', sa.DateTime(timezone=True),
                              nullable=False),
                    sa.Column('Дата обновления', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weight_pet')
    op.drop_table('molting_pet')
    op.drop_table('length_pet')
    op.drop_table('user_group_association')
    op.drop_table('pet')
    op.drop_table('user_company_association')
    op.drop_table('subscription')
    op.drop_table('group')
    op.drop_table('user_subscriptions')
    op.drop_index(op.f('ix_company_user_id'), table_name='company')
    op.drop_table('company')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
