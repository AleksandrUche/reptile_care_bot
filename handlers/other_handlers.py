from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.filters import CommandStart
from aiogram.types import Message
from sqlalchemy.exc import IntegrityError
from sqlalchemy.ext.asyncio import AsyncSession

from database.user_models import UserOrm
from keyboards.reply_keyboards import reply_keyboards
from lexicon.lexicon import LEXICON_RU

router = Router()


@router.message(CommandStart())
async def start_handler(message: Message, session: AsyncSession):
    user = UserOrm(
        telegram_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name,
    )
    session.add(user)
    try:
        await session.commit()
        await message.answer(
            text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n'
                 '–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –≤–∞—à–∏–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏ ü¶éüêçü¶ñ\n',
            reply_markup=reply_keyboards.main_menu
        )
    except IntegrityError:
        await message.answer(
            text=f'–†–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å —Å–Ω–æ–≤–∞ {user.first_name}üòä\n'
                 '–ù–∞–ø–æ–º–Ω—é, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫,  –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –≤–∞—à–∏–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏ ü¶éüêçü¶ñ\n',
        )


@router.message(Command(commands='help'))
async def process_help_command(message: Message):
    await message.answer(text=LEXICON_RU['/help'])


@router.message(F.text == '–ü—Ä–æ—Ñ–∏–ª—å')
async def send_answer(message: Message):
    await message.answer(text=LEXICON_RU['profile'])


@router.message()
async def send_answer(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –¥—Ä—É–≥–∏–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã"""
    await message.answer(text=LEXICON_RU['other_answer'])
