from aiogram.types import Message
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from database.models.pets_models import CompanyOrm, GroupOrm
from database.models.user_models import UserOrm
from keyboards.inline_keyboards import inline_keyboards
from keyboards.reply_keyboards import reply_keyboards
from main import logger


async def user_exists(telegram_id: int, session: AsyncSession) -> UserOrm | None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º telegram_id.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –∏–Ω–∞—á–µ False.
    """
    stmt = select(UserOrm).filter(UserOrm.telegram_id == telegram_id)
    res = await session.execute(stmt)
    return res.scalar()


async def user_registration(message: Message, session: AsyncSession):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î,
    —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –µ–≥–æ –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–∞–Ω–∏—é –∏ –≥—Ä—É–ø–ø—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
    """
    user_exist = await user_exists(message.from_user.id, session)
    if user_exist:
        await message.answer(
            text=f'–†–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å —Å–Ω–æ–≤–∞ {user_exist.first_name}üòä\n'
                 '–ù–∞–ø–æ–º–Ω—é, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫,  –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –≤–∞—à–∏–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏ ü¶éüêçü¶ñ\n',
            reply_markup=inline_keyboards.my_profile,
        )
    else:
        user = UserOrm(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
        )
        session.add(user)
        await session.flush()

        company = CompanyOrm(name='–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é', user_id=user.id)
        session.add(company)
        await session.flush()

        group = GroupOrm(name='–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é', company_id=company.id)
        session.add(group)
        try:
            await session.commit()
        except Exception as e:
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}', exc_info=True)
            await message.answer(
                text='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            )
        else:
            await message.answer(
                text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n'
                     '–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –≤–∞—à–∏–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏ ü¶éüêçü¶ñ\n',
                reply_markup=reply_keyboards.main_menu
            )
